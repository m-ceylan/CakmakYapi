@{
    ViewData["Title"] = "Index";
}

<!-- Page title -->
<div class="page-title parallax parallax3">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title"> <span>Hizmetlerimiz</span></h1>
                </div><!-- /.page-title-captions -->
                <div class="breadcrumbs">
                    <ul>
                        <li><a href="index.html">Anasayfa</a></li>
                        <li> Hizmetlerimiz </li>
                    </ul>
                </div><!-- /.breadcrumbs -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->
<!-- serives -->
<section class="flat-row" id="app">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="title-section text-center">
                    <h1 class="title">Hizmetlerimiz</h1>
                </div>
                <div class="flat-spacer height30"></div>
            </div><!-- /.col-md-12 -->
        </div>

        <template v-for=""></template>
        <div class="row">
            <div class="col-md-12">
                <div class="images-box  clear-fix " v-on:mouseover=mouseOver($event) v-on:mouseleave=mouseLeave($event)  v-for="item in items" :key="item.id">
                    <img :src=item.headImageUrl alt="serives">
                    <div class="box-content">
                        <div class="box-title">
                            <a href="#">{{item.title}}</a>
                        </div>
                        <label>{{item.description}}</label>
                        <a href="#" class="box-redmore">{{item.title}} </a>
                    </div>
                </div><!-- /.images-box -->
            </div><!-- /.col-md-12 -->
        </div>

         
    </div><!-- /.container -->
</section>


@section Scripts{

<script>

      var app = new Vue({
          el: '#app',
          data: {
              checkAll: false,
              request: {
                  id: null,
                  title: '',
                  description: '',
                  collection: null
              },
              filter: {
                  Skip: 0,
                  Take: 10,
                  Page: 1,
                  TotalCount: 0,
                  CurrentPage: 1,
                  SearchTerm: ''
              },
              response: {
                  validationErrors: [],
                  Data: null
              },
              items: [],
          },
          methods: {
              //Data Operations Start
              getData: async function () {

                  debugger;
                  var res = (await this.$service.post('services/get', {
                      ... this.filter,
                      Skip: (this.filter.CurrentPage * this.filter.Take) - this.filter.Take
                  }));

                  this.items = res.data.data.items;
                  this.filter.TotalCount = res.data.data.totalCount;
              },

              mouseOver: function (element){
                element.currentTarget.classList.add("show");
              },
              mouseLeave:
               function (element){
                element.currentTarget.classList.remove("show");
              }
              //Data Operations End
          },
          async beforeMount() {
              this.getData();

          },
          mounted() {

        $('.row').each(function() {
              $(this).find(".images-box").on('mouseenter mouseleave', function() {
                  $(".images-box").removeClass('show');
                  $(this).addClass('show');
              } );
          });
    },

          watch: {

          },
          computed: {

          }
      });

</script>


} 